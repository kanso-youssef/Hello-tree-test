[{"/home/youssef/Desktop/hello-tree-test/src/index.js":"1","/home/youssef/Desktop/hello-tree-test/src/App.js":"2","/home/youssef/Desktop/hello-tree-test/src/reportWebVitals.js":"3","/home/youssef/Desktop/hello-tree-test/src/components/counter.jsx":"4","/home/youssef/Desktop/hello-tree-test/src/components/counters.jsx":"5","/home/youssef/Desktop/hello-tree-test/src/components/navbar.jsx":"6","/home/youssef/Desktop/hello-tree-test/src/components/navbarBlack.jsx":"7","/home/youssef/Desktop/hello-tree-test/src/components/sectionsNavbar.jsx":"8","/home/youssef/Desktop/hello-tree-test/src/components/sectionContainer.jsx":"9","/home/youssef/Desktop/hello-tree-test/src/components/members.jsx":"10","/home/youssef/Desktop/hello-tree-test/src/components/meetMembers.jsx":"11","/home/youssef/Desktop/hello-tree-test/src/components/sectors.jsx":"12","/home/youssef/Desktop/hello-tree-test/src/components/sectorSection.jsx":"13","/home/youssef/Desktop/hello-tree-test/src/components/sectionOne.jsx":"14"},{"size":640,"mtime":1612523924139,"results":"15","hashOfConfig":"16"},{"size":9479,"mtime":1612543144475,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612187332908,"results":"18","hashOfConfig":"16"},{"size":930,"mtime":1612271841797,"results":"19","hashOfConfig":"16"},{"size":680,"mtime":1612271779845,"results":"20","hashOfConfig":"16"},{"size":1233,"mtime":1612528136832,"results":"21","hashOfConfig":"16"},{"size":514,"mtime":1612533827033,"results":"22","hashOfConfig":"16"},{"size":1386,"mtime":1612535130131,"results":"23","hashOfConfig":"16"},{"size":2431,"mtime":1612532941031,"results":"24","hashOfConfig":"16"},{"size":1339,"mtime":1612454560692,"results":"25","hashOfConfig":"16"},{"size":3983,"mtime":1612456896823,"results":"26","hashOfConfig":"16"},{"size":1240,"mtime":1612513981367,"results":"27","hashOfConfig":"16"},{"size":1815,"mtime":1612543170091,"results":"28","hashOfConfig":"16"},{"size":1598,"mtime":1612530348267,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"64yngo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/youssef/Desktop/hello-tree-test/src/index.js",[],["62","63"],"/home/youssef/Desktop/hello-tree-test/src/App.js",["64"],"/home/youssef/Desktop/hello-tree-test/src/reportWebVitals.js",[],"/home/youssef/Desktop/hello-tree-test/src/components/counter.jsx",[],["65","66"],"/home/youssef/Desktop/hello-tree-test/src/components/counters.jsx",[],"/home/youssef/Desktop/hello-tree-test/src/components/navbar.jsx",["67","68","69","70","71","72","73"],"/home/youssef/Desktop/hello-tree-test/src/components/navbarBlack.jsx",["74","75","76"],"/home/youssef/Desktop/hello-tree-test/src/components/sectionsNavbar.jsx",["77","78","79","80","81"],"/home/youssef/Desktop/hello-tree-test/src/components/sectionContainer.jsx",["82","83"],"/home/youssef/Desktop/hello-tree-test/src/components/members.jsx",[],"/home/youssef/Desktop/hello-tree-test/src/components/meetMembers.jsx",["84","85"],"import React, { Component } from 'react';\nimport SectionsNavbar from './sectionsNavbar';\nimport Members from './members';\nimport './../css/meetMembers.css'\n\nclass MeetMembers extends Component {\n  state = {\n    role: 'mentors', \n    member: {},\n    memberPosition: null,\n    memberDetailsHeight: null,\n  };\n\n  handleDisplay = (member, index) => {\n    console.log(member, index)\n\n    this.setState({member});\n    this.setState({memberPosition: index});\n  };\n\n  changeRole = (checked) => {\n    checked\n      ? this.setState({role: \"participants\"})\n      : this.setState({role: 'mentors'});\n  };\n\n  handleMeet = (member) => {\n    const isMentor = this.state.role === 'mentors'; \n    const members = isMentor ? this.props.participants : this.props.mentors;\n    const memberPosition = members\n      .filter(mem => mem.section === member.section)\n      .findIndex(mem => mem === member)\n    this.changeRole(isMentor);\n    this.setState({member, memberPosition});\n  }\n\n  // getMemberIndex(member, members) {\n  //   // const filteredMembers = members\n  //   //   .filter(mem => mem.section === member.section);\n  //   // const theMember = filteredMembers.find(mem => mem.role === member.role);\n  //   // const index = filteredMembers.findIndex(mem => mem === theMember);\n\n  //   const theMember = null;\n  //   const index = null;\n  //   members\n  //     .filter(mem => (mem.section === member.section) && (mem.role === member.role))\n  //     .some((mem, index) => {\n\n  //     });\n    \n  //   console.log(\"getMemberIndex\", { theMember, index })\n  //   return { theMember, index };\n  // }\n\n  componentDidUpdate(_previousProp, previousState) {\n    if(previousState.member !== this.state.member){\n      const memberDetailsElement = document.getElementsByClassName('member-details');\n      const memberDetails = Array.from(memberDetailsElement)\n        .find(element => element.scrollHeight != 0)\n      const memberDetailsHeight = memberDetails ? memberDetails.scrollHeight : 0; \n\n      this.setState({memberDetailsHeight});\n    }\n  }\n\n  getBadgeclasses = (role) => {\n    let classes = \"participants-mentors__button-title \";\n    classes += role + \" \";\n    classes += this.state.role === role\n      ? \"active\"\n      : null;\n    \n    return classes;\n  };\n\n  render() { \n    return ( \n      <div className=\"participants-mentors__wrap\"> \n        <p className=\"participants-mentors__title\">Meet the mentors and paticipants</p>\n        <div className=\"participants-mentors__button\">\n            <span\n              id=\"mentors\"\n              className={this.getBadgeclasses('mentors')}\n            >\n              Mentors\n            </span>\n\n            <label className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  onChange={(e) => this.changeRole(e.target.checked)}\n                  checked={this.state.role === 'participants'}\n                />\n                <span className=\"slider round\"></span>\n            </label>\n\n            <span\n              id=\"participants\"\n              className={this.getBadgeclasses('participants')}\n            >\n              Participants\n            </span>\n        </div>\n\n        <div id=\"main-container\" className=\"main-container\">\n          <ul className=\"sections-list\">\n            {this.props.sections.map(section =>\n              <SectionsNavbar\n                key={section.value}\n                section={section}\n                style={false}\n              />\n            )}\n          </ul>\n\n          <Members\n            mentors={this.props.mentors}\n            participants={this.props.participants}\n            onMeet={this.handleMeet}\n            role={this.state.role}\n            sections={this.props.sections}\n            member={this.state.member}\n            handleDisplay={this.handleDisplay}\n            memberPosition={this.state.memberPosition}\n            memberDetailsHeight={this.state.memberDetailsHeight}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default MeetMembers;","/home/youssef/Desktop/hello-tree-test/src/components/sectors.jsx",["86","87"],"import React from 'react';\nimport Navbar from './navbar';\nimport SectionsNavbar from './sectionsNavbar';\nimport './../css/sectors.css'\nimport SectorSection from './sectorSection';\n\nconst Sectors = (props) => {\n\t// console.log(props)\n\treturn (\n\t\t<section>\n\t\t\t<nav className=\"navbar navbar-light sector\">\n\t\t\t\t<div className=\"sector-navbar\">\n\t\t\t\t\t<div className=\"bleu-box\" style={{backgroundColor:\"#12a5b5\", height:49, width:13}}></div>\n\t\t\t\t\t<span className=\"vital-sectors\">25 vital sectors</span>\n\t\t\t\t</div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div className=\"sector-navbar\">\n\t\t\t\t\t<span className=\"new-sector\">new sector</span>\n\t\t\t\t\t<div className=\"red-box\" style={{width: 34, height: 38, backgroundColor: \"#f05b40\"}}></div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t<div className=\"sector-container\">\n\t\t\t\t<ul className=\"sections-list sectors\">\n\t\t\t\t\t{props.sections.map(section => \n\t\t\t\t\t\t<SectionsNavbar\n\t\t\t\t\t\t\tkey={section.value}\n\t\t\t\t\t\t\tsection={section}\n\t\t\t\t\t\t\tstyle={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t\t<div className=\"sectors-sections\">\n\t\t\t\t\t{props.sections.map(section => \n\t\t\t\t\t\t<SectorSection\n\t\t\t\t\t\tkey={section.value}\n\t\t\t\t\t\troles={props.roles}\n\t\t\t\t\t\tsection={section}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section> \n\t);\n}\n \nexport default Sectors;","/home/youssef/Desktop/hello-tree-test/src/components/sectorSection.jsx",["88"],"/home/youssef/Desktop/hello-tree-test/src/components/sectionOne.jsx",["89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":38,"column":91,"nodeType":"98","messageId":"99","endLine":38,"endColumn":96},{"ruleId":"92","replacedBy":"100"},{"ruleId":"94","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":9,"column":9,"nodeType":"104","endLine":9,"endColumn":46},{"ruleId":"105","severity":1,"message":"106","line":10,"column":11,"nodeType":"104","endLine":10,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":17,"column":13,"nodeType":"104","endLine":17,"endColumn":66},{"ruleId":"102","severity":1,"message":"103","line":18,"column":13,"nodeType":"104","endLine":18,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":19,"column":13,"nodeType":"104","endLine":19,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":20,"column":13,"nodeType":"104","endLine":20,"endColumn":81},{"ruleId":"102","severity":1,"message":"103","line":21,"column":13,"nodeType":"104","endLine":21,"endColumn":92},{"ruleId":"102","severity":1,"message":"103","line":8,"column":9,"nodeType":"104","endLine":8,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":9,"column":9,"nodeType":"104","endLine":9,"endColumn":46},{"ruleId":"102","severity":1,"message":"103","line":10,"column":9,"nodeType":"104","endLine":10,"endColumn":46},{"ruleId":"107","severity":1,"message":"108","line":16,"column":3,"nodeType":"109","messageId":"110","endLine":48,"endColumn":6},{"ruleId":"105","severity":1,"message":"106","line":21,"column":13,"nodeType":"104","endLine":21,"endColumn":54},{"ruleId":"105","severity":1,"message":"106","line":29,"column":13,"nodeType":"104","endLine":29,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":36,"column":13,"nodeType":"104","endLine":36,"endColumn":62},{"ruleId":"105","severity":1,"message":"106","line":44,"column":13,"nodeType":"104","endLine":44,"endColumn":56},{"ruleId":"105","severity":1,"message":"106","line":21,"column":15,"nodeType":"104","endLine":21,"endColumn":59},{"ruleId":"105","severity":1,"message":"106","line":48,"column":21,"nodeType":"104","endLine":48,"endColumn":75},{"ruleId":"111","severity":1,"message":"112","line":59,"column":47,"nodeType":"113","messageId":"99","endLine":59,"endColumn":49},{"ruleId":"114","severity":1,"message":"115","line":111,"column":17,"nodeType":"116","endLine":111,"endColumn":30},{"ruleId":"117","severity":1,"message":"118","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":29,"column":8,"nodeType":"116","endLine":29,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":37,"column":13,"nodeType":"104","endLine":37,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":29,"column":17,"nodeType":"104","endLine":29,"endColumn":66},{"ruleId":"105","severity":1,"message":"106","line":30,"column":17,"nodeType":"104","endLine":30,"endColumn":67},{"ruleId":"105","severity":1,"message":"106","line":31,"column":17,"nodeType":"104","endLine":31,"endColumn":60},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-dupe-keys","Duplicate key 'label'.","ObjectExpression","unexpected",["121"],["122"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]